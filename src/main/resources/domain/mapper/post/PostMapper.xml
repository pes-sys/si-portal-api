<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esstm.siportalapi.domain.post.repository.PostMapper">

    <resultMap id="PostVoMap" type="com.esstm.siportalapi.domain.post.vo.PostVo">
        <id property="postId" column="post_id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="status" column="status" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <insert id="insert" parameterType="com.esstm.siportalapi.domain.post.vo.PostVo" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO posts (
            title, content, status, created_at, updated_at
        ) VALUES (
                     #{title}, #{content}, #{status}, NOW(), NOW()
                 )
    </insert>

    <select id="selectAll" parameterType="map" resultMap="PostVoMap">
        SELECT
        post_id, title, content, author, created_at, updated_at
        FROM posts
        <where>
            <if test="keyword != null and keyword.trim() != ''">
                (title LIKE CONCAT('%', #{keyword}, '%')
                OR content LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        ORDER BY created_at DESC
        <if test="limit != null">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="selectById" parameterType="long" resultMap="PostVoMap">
        SELECT
            post_id, title, content, status, created_at, updated_at
        FROM posts
        WHERE post_id = #{postId}
    </select>

    <update id="update" parameterType="com.esstm.siportalapi.domain.post.vo.PostVo">
        UPDATE posts
        SET
            title = #{title},
            content = #{content},
            updated_at = NOW()
        WHERE post_id = #{postId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM posts
        WHERE post_id = #{postId}
    </delete>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(*)
        FROM posts
        <where>
            <if test="keyword != null and keyword.trim() != ''">
                (title LIKE CONCAT('%', #{keyword}, '%')
                OR content LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
    </select>

</mapper>
